{
  "workbench.editor.limit.enabled": true,
  "workbench.iconTheme": "helium-icon-theme",
  "workbench.editor.limit.value": 1,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editor.showTabs": "single",
  "workbench.tree.indent": 20,
  "workbench.localHistory.mergeWindow": 30,
  "helium-icon-theme.hidesExplorerArrows": true,
  "workbench.colorTheme": "Nord",
  "workbench.colorCustomizations": {
    "editor.lineHighlightBorder": "#ffffff08",
    "editorCursor.foreground": "#ff0000",
    "editorWhitespace.foreground": "#5c5c5c78",

    "[Nord]": {
      // Disable bracket pair colorization, but keep unexpected bracket color
      "editorBracketHighlight.foreground1": "#ECEFF4",
      "editorBracketHighlight.foreground2": "#ECEFF4",
      "editorBracketHighlight.foreground3": "#ECEFF4",
      "editorBracketHighlight.foreground4": "#ECEFF4",
      "editorBracketHighlight.foreground5": "#ECEFF4",
      "editorBracketHighlight.foreground6": "#ECEFF4",
      "editorBracketHighlight.unexpectedBracket.foreground": "#BF616A"
    }
  },
  "window.menuBarVisibility": "toggle",
  "window.zoomLevel": 1,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "Cargo.toml": "Cargo*, rustfmt*",
    "*.ts": "${capture}.spec.ts",
    "*.tsx": "${capture}.tests.tsx, ${capture}.*ss",
    "next.config.js": "next*",
    "package.json": "vite*, .nvmrc, yarn*, pnpm*, jest*, .sequelize*, .prettier*, .lintstaged*, .eslint*, coffeelint*, cypress*, relay*, tsconfig*, .swc*, babel*, package*",
    ".env": ".env*, .secrets.baseline",
    "Dockerfile": ".dockerignore, docker-compose*",
    ".gitignore": ".gitattributes",
    "Gemfile": "Brewfile*, Rakefile*, Gemfile*, .ruby-version, .rubocop*, .rspec, .foreman, config.ru",
    "Pipfile": "Pipfile*, requirements.txt",
    "README.md": "*.md, LICENSE"
  },
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.inlayHints.fontSize": 10,
  "editor.inlayHints.padding": true,
  "editor.lineHeight": 20,
  "editor.fontSize": 14,
  "editor.insertSpaces": true,
  "editor.suggest.showWords": false,
  "editor.suggestSelection": "first",
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "on",
    "strings": true,
  },
  "editor.fontLigatures": true,
  "editor.renderWhitespace": "all",
  "editor.cursorBlinking": "solid",
  "editor.wordWrap": "off",
  "editor.minimap.renderCharacters": false,
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.glyphMargin": true,
  "editor.lineNumbers": "on",
  "editor.tabSize": 4,
  "editor.rulers": [120],
  "editor.accessibilitySupport": "off",
  "editor.folding": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.minimap.enabled": false,
  "editor.stickyScroll.enabled": true,
  "debug.onTaskErrors": "abort",
  "debug.javascript.autoAttachFilter": "disabled",
  "debug.allowBreakpointsEverywhere": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1500,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.eol": "\n",
  "search.useGlobalIgnoreFiles": true,

// ======================================================================================
// Terminal
// ======================================================================================
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.enablePersistentSessions": false,
  "terminal.integrated.localEchoLatencyThreshold": -1,
  "terminal.integrated.defaultProfile.osx": "fish",
  "terminal.integrated.defaultProfile.linux": "fish",
  "terminal.integrated.minimumContrastRatio": 1,
  "terminal.integrated.enableMultiLinePasteWarning": false,

// ======================================================================================
// Code formatting and languages
// ======================================================================================
  "[html]": {
    "editor.tabSize": 2
  },
  "[json]": {
    "editor.tabSize": 2
  },
  "[ruby]": {
    "editor.tabSize": 2
  },
  "[python]": {
    "editor.tabSize": 4
  },
  "[md]": {
    "editor.wordWrap": "on"
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnSave": true
  },
  "[ocaml]": {
    "editor.tabSize": 2,
    "editor.formatOnSave": true
  },

  "typescript.tsserver.log": "off",
  "typescript.preferences.useAliasesForRenames": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.preferences.useAliasesForRenames": true,
  "javascript.inlayHints.parameterNames.enabled": "all",

  "emmet.includeLanguages": {
    "rust": "html",
    "*.rs": "html",
  },
  "tailwindCSS.includeLanguages": {
    "rust": "html",
    "*.rs": "html",
  },
  "rust-analyzer.check.command": "clippy",
  "files.associations": {
    "*.rs": "rust",
  },
  "css.validate": false,

// ======================================================================================
// VIM
// ======================================================================================
  "vim.surround": true,
  "vim.easymotion": true,
  "vim.camelCaseMotion.enable": false, // disabled due to use of whichkey

  "vim.easymotionKeys": "hklyuiopnmqwertzxcvbasdgjf",
  "vim.easymotionMarkerBackgroundColor": "#00000000",
  "vim.easymotionMarkerForegroundColorOneChar": "Red",
  "vim.easymotionMarkerForegroundColorTwoCharFirst": "Orange",
  "vim.easymotionMarkerForegroundColorTwoCharSecond": "Orange",

  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": false,
  "vim.insertModeKeyBindings": [
    {
      "before": ["e", "u"],
      "after": ["<esc>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["s"],
      "after": ["leader", "leader", "s"]
    },
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["v"],
      "after": ["<esc>"]
    },
    {
      "before": ["s"],
      "after": ["leader", "leader", "s"]
    },
    {
        "before": ["p"],
        "after": ["p", "g", "v", "y"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    }
  ],

// ======================================================================================
// Whichkey
// ======================================================================================
  "whichkey.sortOrder": "none",
  "whichkey.showButtons": false,
  "whichkey.showIcons": true,
  "whichkey.bindings": [
    {
      "key": ">",
      "name": "Show all commands",
      "icon": "keyboard",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "p",
      "name": "Find in project",
      "icon": "zap",
      "type": "command",
      "command": "workbench.action.quickOpen"
    },
    {
      "key": "s",
      "name": "Open settings",
      "icon": "gear",
      "type": "command",
      "command": "workbench.action.openSettingsJson"
    },
    {
      "key": "u",
      "name": "User Interface...",
      "icon": "book",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Explorer",
          "icon": "explorer-view-icon",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "x",
          "name": "Extensions",
          "icon": "extensions-view-icon",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "g",
          "name": "Git",
          "icon": "source-control-view-icon",
          "type": "command",
          "command": "workbench.scm.focus"
        },
        {
          "key": "G",
          "name": "GitHub",
          "icon": "github",
          "type": "command",
          "command": "pr:github.focus"
        },
        {
          "key": "t",
          "name": "Tests",
          "icon": "test-view-icon",
          "type": "command",
          "command": "test-explorer.focus"
        },
        {
          "key": "d",
          "name": "Debug",
          "icon": "debug-alt",
          "type": "command",
          "command": "workbench.view.debug"
        },
        {
          "key": "D",
          "name": " Docker",
          "icon": "package",
          "type": "command",
          "command": "dockerContainers.focus"
        },
        {
          "key": "o",
          "name": "Outline",
          "icon": "outline-view-icon",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "f",
          "name": "Fullscreen",
          "icon": "fullscreen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "z",
          "name": "Zen mode",
          "icon": "rocket",
          "type": "command",
          "command": "workbench.action.toggleZenMode"
        },
        {
          "key": "m",
          "name": "Markdown preview",
          "icon": "markdown",
          "type": "command",
          "command": "markdown.showPreview",
          "when": "!notebookEditorFocused && editorLangId == 'markdown'"
        }
      ]
    },
    {
      "key": "a",
      "name": "Code actions...",
      "icon": "lightbulb",
      "type": "bindings",
      "bindings": [
        {
          "key": "r",
          "name": "Rename",
          "icon": "replace",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "icon": "lightbulb-autofix",
          "type": "command",
          "command": "editor.action.quickFix"
        },
        {
          "key": "h",
          "name": "Hover Info",
          "icon": "info",
          "type": "command",
          "command": "editor.action.showHover"
        }
      ]
    },
    {
      "key": "w",
      "name": "Window...",
      "icon": "window",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Split horizontal",
          "icon": "split-horizontal",
          "type": "command",
          "command": "workbench.action.splitEditorRight"
        },
        {
          "key": "S",
          "name": "Split vertical",
          "icon": "split-vertical",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "c",
          "name": "Close editor",
          "icon": "trash",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Focus on left group",
          "icon": "triangle-left",
          "type": "command",
          "command": "workbench.action.focusLeftGroup"
        },
        {
          "key": "j",
          "name": "Focus on bottom group",
          "icon": "triangle-down",
          "type": "command",
          "command": "workbench.action.focusBelowGroup"
        },
        {
          "key": "k",
          "name": "Focus on top group",
          "icon": "triangle-up",
          "type": "command",
          "command": "workbench.action.focusAboveGroup"
        },
        {
          "key": "l",
          "name": "Focus on right group",
          "icon": "triangle-right",
          "type": "command",
          "command": "workbench.action.focusRightGroup"
        },
        {
          "key": "m",
          "name": "Move editor...",
          "icon": "move",
          "type": "bindings",
          "bindings": [
            {
              "key": "h",
              "name": "Move editor left",
              "icon": "triangle-left",
              "type": "command",
              "command": "workbench.action.moveActiveEditorGroupLeft"
            },
            {
              "key": "j",
              "name": "Move editor down",
              "icon": "triangle-down",
              "type": "command",
              "command": "workbench.action.moveActiveEditorGroupDown"
            },
            {
              "key": "k",
              "name": "Move editor up",
              "icon": "triangle-up",
              "type": "command",
              "command": "workbench.action.moveActiveEditorGroupUp"
            },
            {
              "key": "l",
              "name": "Move editor right",
              "icon": "triangle-right",
              "type": "command",
              "command": "workbench.action.moveActiveEditorGroupRight"
            }
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debugger...",
      "icon": "debug-alt",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Breakpoint",
          "icon": "debug-breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Breakpoints...",
          "icon": "activate-breakpoints",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Breakpoint",
              "icon": "debug-breakpoint",
              "type": "command",
              "command": "editor.debug.action.toggleBreakpoint"
            },
            {
              "key": "c",
              "name": "Conditional Breakpoint",
              "icon": "debug-breakpoint-function",
              "type": "command",
              "command": "editor.debug.action.conditionalBreakpoint"
            },
            {
              "key": "l",
              "name": "Log Point",
              "icon": "debug-breakpoint-log",
              "type": "command",
              "command": "editor.debug.action.addLogPoint"
            }
          ]
        },
        {
          "key": "h",
          "name": "Hover Info",
          "icon": "info",
          "type": "command",
          "command": "editor.debug.action.showDebugHover"
        },
        {
          "key": "S",
          "name": "Select and Start",
          "icon": "debug-all",
          "type": "command",
          "command": "workbench.action.debug.selectandstart"
        },
        {
          "key": "s",
          "name": "Start",
          "icon": "debug-start",
          "type": "command",
          "command": "workbench.action.debug.start",
          "when": "debuggersAvailable && debugState == 'inactive'"
        },
        {
          "key": "p",
          "name": "Pause",
          "icon": "debug-pause",
          "type": "command",
          "command": "workbench.action.debug.pause",
          "when": "debugState == 'running'"
        },
        {
          "key": "c",
          "name": "Continue",
          "icon": "debug-continue",
          "type": "command",
          "command": "workbench.action.debug.continue",
          "when": "debugState == 'stopped'"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "icon": "source-control",
      "type": "bindings",
      "bindings": [
        {
          "key": "r",
          "name": "Revert selected",
          "icon": "discard",
          "type": "command",
          "command": "git.revertSelectedRanges",
          "when": "isInDiffEditor"
        },
        {
          "key": "s",
          "name": "Stage selected",
      "icon": "diff-added",
          "type": "command",
          "command": "git.stageSelectedRanges",
          "when": "isInDiffEditor"
        },
        {
          "key": "S",
          "name": "Unstage selected",
          "icon": "diff-removed",
          "type": "command",
          "command": "git.unstageSelectedRanges",
          "when": "isInDiffEditor"
        }
      ]
    },
    {
      "key": " ",
      "name": "Navigate to...",
      "icon": "arrow-both",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Go to spec/implementation",
          "icon": "test-view-icon",
          "type": "command",
          "command": "extension.goToSpec"
        },
        {
          "key": "o",
          "name": "Open link",
          "icon": "link",
          "type": "command",
          "command": "editor.action.openLink"
        },
        {
          "key": "r",
          "name": "Go to references",
          "icon": "references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "d",
          "name": "Go to definition",
          "icon": "symbol-interface",
          "type": "command",
          "command": "editor.action.revealDefinition"
        },
        {
          "key": "s",
          "name": "Go to symbol",
          "icon": "symbol-function",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "b",
          "name": "Go back",
          "icon": "history",
          "type": "command",
          "command": "workbench.action.navigateBack"
        }
      ]
    },
    {
      "key": "c",
      "name": "Comment",
      "icon": "symbol-parameter",
      "type": "command",
      "command": "editor.action.commentLine"
    },
    {
      "key": "f",
      "name": "Open file",
      "icon": "file",
      "type": "command",
      "command": "workbench.action.files.openFile"
    },
    {
      "key": "F",
      "name": "Open folder",
      "icon": "file-directory",
      "type": "command",
      "command": "workbench.action.files.openFolder"
    }
  ],

// ======================================================================================
// Misc
// ======================================================================================
  "telemetry.telemetryLevel": "off",
  "security.workspace.trust.untrustedFiles": "open",
  "update.mode": "manual",
  "extensions.autoUpdate": false,
  "extensions.ignoreRecommendations": true,
  "testing.automaticallyOpenPeekViewDuringAutoRun": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)|todo!",
  "errorLens.excludeBySource": ["cSpell"],
  "cSpell.language": "en,ru-RU",
  "cSpell.userWords": [
    "Whichkey",
    "whitespaces"
  ],
  "diffEditor.maxComputationTime": 0,
  "git.suggestSmartCommit": false,
  "git.openRepositoryInParentFolders": "always",
  "workbench.activityBar.location": "hidden",
  "workbench.activityBar.visible": false,
  "files.watcherExclude": {
    "**/.bloop": true,
    "**/.metals": true,
    "**/.ammonite": true
  },
  "metals.javaHome": "/home/ladihzey/.jabba/jdk/openjdk@1.17.0",
}
